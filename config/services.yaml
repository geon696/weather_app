# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'

    weather.endpoint: 'api.openweathermap.org/data/2.5/weather'
    weather.key: 'a26acf0051bf171013665e6c43d8b393'
    forecast.endpoint: 'api.openweathermap.org/data/2.5/forecast'
    geoip.endpoint: 'https://api.ipgeolocation.io/ipgeo'
    geoip.key: '0d33345c303748b28236b3d255ad6ab2'
    news.endpoint: 'https://newsapi.org/v2/top-headlines'
    news.key: 'aa47594b891141408dc5003a0cb3564c'
    betfair.longin.endpoint: 'https://identitysso.betfair.com/api/login'
    betfair.next.endpoint: 'https://api.betfair.com/exchange/betting/rest'
    betfair.key: 'WLsLIUabgRCGrxMf'
    


services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.
        bind:
            $weatherEndpoint: '%weather.endpoint%'
            $weatherKey: '%weather.key%'
            $forecastEndpoint: '%forecast.endpoint%'
            $geoipEndpoint: '%geoip.endpoint%'
            $geoipKey: '%geoip.key%'
            $newsEndpoint: '%news.endpoint%'
            $newsKey: '%news.key%'
            $betfairLoginEndpoint: '%betfair.longin.endpoint%'
            $betfairNextEndpoint: '%betfair.next.endpoint%'
            $betfairKey: '%betfair.key%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    App\Service\:
        resource: '../src/Service'
        exclude: '../src/Service/{Entity,Migrations,Tests,Kernel.php}'

    dpolac.twig_lambda.extension:
        class: DPolac\TwigLambda\LambdaExtension
        tags: [ { name: twig.extension } ]

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
