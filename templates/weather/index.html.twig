{% extends 'base.html.twig' %}

{% block title %}Wheather{% endblock title %}
{% block stylesheets %}
    {{ parent() }}
    <style>
		.jumbotron-container {
			margin-top:15px;
		}
		.form-inline input[type='submit'], .form-inline input[type='text']{
			margin-left: 10px;
		}
		.form {
			background-color: #ccc;
			border-radius: 5px;
			padding: 5px;
			margin-top:15px;
		}

    </style>
{% endblock stylesheets %}
{% block body %}

     

	<div class="container">
		

		<div class="row">
			<div class="col-lg-12">
				{{form_start(weatherForm,{'attr': {'class': 'form'}})}}
					<div class="col-lg-12">
						<legend>{{form_label(weatherForm)}}</legend>
					</div>
					<div class="col-lg-12">
						<div class="typeahead__container">
					        <div class="typeahead__field">
					            <div class="typeahead__query">
					                <!-- <input class="js-typeahead-country_v1" name="country_v1[query]" placeholder="Search" autocomplete="off" type="search"> -->
					                <div class="form-wrapper"><label for="weather_city">{{form_label(weatherForm.city)}}</label>
									{{form_widget(weatherForm.city)}}</div>
									<input type="submit" value="submit" class="btn btn-primary submit">
					            </div>
					        </div>
					    </div>
						
					</div>
					<!-- <div class="form-group mb-2">
						<input type="submit" value="submit" class="btn btn-primary submit">
					</div> -->
				{{form_end(weatherForm)}}
			</div>
		</div>
		
		<hr>
		
		{% block weather %}
		    
		{% endblock weather %}
		
		<div class="row">
			<div class="col-xl-12 jumbotron-container">
				<div class="jumbotron">
					<h1 class="display-4">
						Find out about the wheather
					</h1>
					<p class="lead"> This is going to be a simple app that covers most of the basics of the weather apps </p>
					<hr class="my-4">
					<p>This is using the openweather.org platform to extract its data</p>
					<a href="https://openweathermap.org/" class="btn btn-primary btn-lg" target="_blnak">Learn more</a>
				</div>
			</div>
		</div>
	</div>
{% endblock body %}

{% block javascripts %}
	{{parent()}}

	<script type="text/javascript">
		$(document).ready(function(){

			    // Defining the local dataset
			    var cities = ['Athens', 'Thessaloniki', 'Patras', 'Piraeus', 'Larissa', 'Heraklion', 'Peristeri', 'Kallithea',
			    'Acharnes','Kalamaria', 'Nikaia', 'Glyfada', 'Volos', 'Ilio', 'Ilioupoli', 'Keratsini', 'Evosmos', 'Chalandri',
			    'Nea Smyrni', 'Marousi', 'Agios Dimitrios', 'Zografou', 'Egaleo', 'Nea Ionia', 'Ioannina', 'Palaio Faliro', 
			    'Korydallos', 'Trikala', 'Vyronas', 'Agia Paraskevi', 'Galatsi', 'Agrinio', 'Chalcis', 'Petroupoli', 'Serres',
			    'Alexandroupoli', 'Xanthi', 'Katerini', 'Kalamata', 'Kavala', 'Chania', 'Lamia', 'Komotini', 'Irakleio', 'Rhodes',
			    'Kifissia', 'Stavroupoli', 'Chaidari', 'Drama', 'Veria', 'Alimos', 'Kozani', 'Polichni', 'Polichni', 'Karditsa',
			    'Sykies', 'Ampelokipoi', 'Pylaia', 'Agioi Anargyroi', 'Argyroupoli', 'Ano Liosia', 'Nea Ionia', 'Rethymno', 'Ptolemaida', 
			    'Tripoli', 'Cholargos', 'Vrilissia', 'Aspropyrgos', 'Corinth', 'Gerakas', 'Metamorfosi', 'Giannitsa', 'Voula', 'Kamatero',
			    'Mytilene', 'Neapoli', 'Eleftherio-Kordelio', 'Chios', 'Agia Varvara', 'Kaisariani', 'Nea Filadelfeia', 'Moschato', 'Perama',
			    'Salamina', 'Eleusis', 'Corfu', 'Pyrgos', 'Megara', 'Kilkis', 'Dafni', 'Thebes', 'Melissia', 'Argos', 'Arta', 'Artemida',
			    'Livadeia', 'Pefki', 'Oraiokastro', 'Aigio', 'Kos', 'Koropi', 'Preveza', 'Naousa', 'Orestiada', 'Peraia', 'Edessa', 'Florina',
			    'Panorama', 'Nea Erythraia', 'Elliniko', 'Amaliada', 'Pallini', 'Sparta', 'Agios Ioannis Rentis', 'Thermi', 'Vari', 'Nea Makri',
			    'Tavros', 'Alexandreia', 'Menemeni', 'Paiania', 'Kalyvia Thorikou', 'Nafplio', 'Drapetsona', 'Efkarpia', 'Papagou', 'Nafpaktos',
			    'Kastoria', 'Grevena', 'Pefka', 'Nea Alikarnassos', 'Missolonghi', 'Gazi', 'Ierapetra', 'Kalymnos', 'Rafina', 'Loutraki', 
			    'Agios Nikolaos', 'Ermoupoli', 'Ialysos', 'Mandra', 'Tyrnavos', 'Glyka Nera', 'Ymittos', 'Neo Psychiko'
			    ];
			    
			    // Constructing the suggestion engine
			    var cities = new Bloodhound({
			        datumTokenizer: Bloodhound.tokenizers.whitespace,
			        queryTokenizer: Bloodhound.tokenizers.whitespace,
			        local: cities
			    });
			    
			    // Initializing the typeahead
			    $('.typeahead').typeahead({
			        hint: true,
			        highlight: true, /* Enable substring highlighting */
			        minLength: 1 /* Specify minimum characters required for showing result */
			    },
			    {
			        name: 'cities',
			        source: cities
			    });
					});

	</script>

{% endblock javascripts %}